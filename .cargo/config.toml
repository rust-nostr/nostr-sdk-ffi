[profile.release]
opt-level = 'z'     # Optimize for size
lto = true          # Enable Link Time Optimization
codegen-units = 1   # Reduce the number of codegen units to increase optimizations
panic = "abort"     # Abort on panic
strip = true        # Full strip the binary. A debug binary will be used for generating UniFFI foreign languages!

[target.aarch64-linux-android]
rustflags = [
    "-Clink-arg=-Wl,-z,pack-relative-relocs",
    "-Clink-arg=-Wl,-z,max-page-size=16384",  # 16KB page size alignment
]

[target.armv7-linux-androideabi]
rustflags = [
    "-Clink-arg=-Wl,-z,pack-relative-relocs",
    "-Clink-arg=-Wl,-z,max-page-size=16384",  # 16KB page size alignment
]

[target.x86_64-linux-android]
rustflags = [
    "-Clink-arg=-Wl,-z,pack-relative-relocs",
    "-Clink-arg=-Wl,-z,max-page-size=16384",  # 16KB page size alignment
]

[target.i686-linux-android]
rustflags = [
    "-Clink-arg=-Wl,-z,pack-relative-relocs",
    "-Clink-arg=-Wl,-z,max-page-size=16384",  # 16KB page size alignment
]

[target.i686-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.x86_64-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.armv7-unknown-linux-musleabihf]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.aarch64-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.riscv64gc-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]
