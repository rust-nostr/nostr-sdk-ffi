[profile.release]
opt-level = 'z'     # Optimize for size
lto = true          # Enable Link Time Optimization
codegen-units = 1   # Reduce the number of codegen units to increase optimizations
panic = "abort"     # Abort on panic
strip = "debuginfo" # Partially strip symbols from binary. If fully stripped, UniFFI can't generate foreign-language bindings

[build]
rustflags = ["-Cpanic=abort", "-Zpanic_abort_tests"]

[unstable]
unstable-options = true
build-std = ["core", "alloc", "std", "panic_abort"]
build-std-features = ["optimize_for_size", "panic_immediate_abort"]

[target.aarch64-linux-android]
rustflags = ["-Clink-arg=-Wl,-z,pack-relative-relocs"]

[target.armv7-linux-androideabi]
rustflags = ["-Clink-arg=-Wl,-z,pack-relative-relocs"]

[target.x86_64-linux-android]
rustflags = ["-Clink-arg=-Wl,-z,pack-relative-relocs"]

[target.i686-linux-android]
rustflags = ["-Clink-arg=-Wl,-z,pack-relative-relocs"]

[target.i686-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.x86_64-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.armv7-unknown-linux-musleabihf]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.aarch64-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]

[target.riscv64gc-unknown-linux-musl]
# Dynamic linkage, to create `.so` library
rustflags = ["-C", "target-feature=-crt-static"]
